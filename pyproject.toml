[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "apache-airflow-etl-demo"
version = "1.0.0"
description = "Comprehensive Apache Airflow ETL demonstration platform"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Airflow ETL Demo Team", email = "demo@example.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "SIM", # flake8-simplify
]
ignore = [
    "S101",  # assert used (needed for pytest)
    "S311",  # random used (acceptable for mock data generation)
    "E501",  # line too long (handled by black)
    "C901",  # complex-structure (acceptable for data quality checks)
    "SIM102",  # collapsible-if (sometimes clearer when separate)
    "SIM105",  # suppressible-exception (contextlib.suppress not always clearer)
    "SIM117",  # multiple-with-statements (sometimes clearer when nested)
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S", "T20", "B017"]  # Security, print, and pytest.raises checks relaxed for tests
"dags/**/*.py" = ["S106", "S108", "S324", "S603", "S608"]  # Security checks relaxed for demo DAGs
"src/**/*.py" = ["S603", "S608"]  # Subprocess and SQL injection checks (false positives in controlled env)
"src/spark_apps/**/*.py" = ["S108"]  # Hardcoded temp files acceptable for demo Spark apps
"src/utils/great_expectations_helper.py" = ["S108"]  # Hardcoded temp files acceptable for demo GE config

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_unimported = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
check_untyped_defs = false
strict_equality = false
allow_subclassing_any = true
allow_untyped_calls = true
allow_untyped_decorators = true
follow_imports = "silent"
ignore_errors = false

[[tool.mypy.overrides]]
module = [
    "airflow.*",
    "great_expectations.*",
    "pyspark.*",
    "telegram.*",
    "faker.*",
    "pandas.*",
    "psycopg2.*",
    "jsonschema.*",
    "ruamel.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "src.spark_apps.*",
    "dags.factory.*",
    "src.operators.quality.*",
    "src.operators.notifications.*",
    "src.operators.spark.*",
    "src.hooks.*",
    "src.utils.retry_policies",
    "src.utils.timeout_handler",
    "src.utils.notification_templates",
    "src.utils.data_generator",
    "src.utils.great_expectations_helper"
]
disallow_untyped_defs = false
check_untyped_defs = false
warn_return_any = false
ignore_errors = true

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, requires services)",
    "slow: Slow tests (long-running, resource-intensive)",
]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov=dags/factory",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src", "dags/factory"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
